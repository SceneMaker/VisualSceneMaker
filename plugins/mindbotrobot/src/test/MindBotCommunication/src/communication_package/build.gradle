/*
 * Copyright (C) 2014 Sarah
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

buildscript {
  apply from: "https://github.com/rosjava/rosjava_bootstrap/raw/kinetic/buildscript.gradle"
}

apply plugin: 'catkin'


allprojects {
    /*
      A github url provides a good standard unique name for your project
      Example below, but you may wish to switch to your own unique url.
    */
    group 'communication_package'
    version = project.catkin.pkg.version
}

subprojects {
    /*
     * The ros-java plugin configures a few things:
     *
     *  - local deployment repository : where it dumps the jars and packaged artifacts)
     *  - local maven repositories    : where it finds your locally installed/built artifacts)
     *  - external maven repositories : where it goes looking if it can't find dependencies locally
     *
     * To modify, or add repos to the default external maven repositories list, pull request against this code:
     *
     *   https://github.com/rosjava/rosjava_bootstrap/blob/kinetic/gradle_plugins/src/main/groovy/org/ros/gradle_plugins/RosPlugin.groovy#L31
     */
    apply plugin: "ros-java"
    /*
     * Some IDE support if you use it.
     */
    /* apply plugin: "eclipse" */
    /* apply plugin: "idea"    */
}

/*
  Some useful tasks:

    install: deploys jar's to MavenLocal() (i.e. ~/.m2/repository)
    publish : deploys jar's to devel/share/maven
    installDist : assembles java apps in the _subproject_/build directories.

  Note that these are dependent on the type of project (e.g. installDist is only valid for
  java binary subprojects, while publish is only added once a subproject is included.
  If you're using catkin_make, this is not important, since it will use the task list specified
  in CMakeLists.txt
*/
defaultTasks 'tasks'
