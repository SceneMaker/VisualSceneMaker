package de.dfki.vsm.model.scenescript;

//~--- JDK imports ------------------------------------------------------------

import java.util.ArrayList;
import java.util.Random;

/**
 * @author Gregor Mehlmann
 */
public class SceneGroup implements Comparable {

    // The Current White List
    private final ArrayList<SceneObject> mWhiteList = new ArrayList();

    // The Current Black List
    private final ArrayList<SceneObject> mBlackList = new ArrayList();

    // Some Random Object
    private final Random mRandom = new Random();

    // The Scene Group Name
    private final String mName;

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public SceneGroup(final String name) {
        mName = name;
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public final String getName() {
        return mName;
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public final ArrayList<SceneObject> getBlackList() {
        return mBlackList;
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public final ArrayList<SceneObject> getWhiteList() {
        return mWhiteList;
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public final void add(final SceneObject scene) {
        mWhiteList.add(scene);
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public final int getSize() {
        return mWhiteList.size() + mBlackList.size();
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    public final SceneObject select() {
        if (mWhiteList.isEmpty()) {

            // Add All Black Members To
            // The Empty White List Now
            mWhiteList.addAll(mBlackList);

            // And Clear The Black List
            mBlackList.clear();
        }

        // Otherwise Get The Next
        // Scene From The White List
        final int         index = mRandom.nextInt(mWhiteList.size());
        final SceneObject scene = mWhiteList.remove(index);

        mBlackList.add(scene);

        // Return The Chosen Scene
        return scene;
    }

    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////
    @Override
    public final int compareTo(Object obj) {
        if (obj instanceof SceneGroup) {
            return ((SceneGroup) obj).mName.compareTo(mName);
        } else {
            return 0;
        }
    }
}
