plugins {
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}
javadoc { options.encoding = 'UTF-8' }

group 'de.dfki'
allprojects {
    version = versioning.info.lastTag
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

javafx {
    modules = [ 'javafx.controls', 'javafx.graphics', 'javafx.fxml', 'javafx.swing' ]
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.0'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    implementation project(":core", {p->p.ext.flavor = "pc"; p.version = versioning.info.lastTag})
    implementation fileTree(dir: 'lib', include: "*.jar")
    implementation project(":plugins:AndroidGui")
    implementation project(":plugins:studymaster-web")
    implementation project(":plugins:decad")
    implementation project(":plugins:yallah")
    implementation project(":plugins:ssi")
    implementation project(":plugins:reeti")
    implementation project(":plugins:tricatworld")
    implementation project(":plugins:charamel")
    implementation project(":plugins:VLCRemoteController")
    implementation project(":plugins:extensionAPI")
    implementation project(":plugins:sockets")


    implementation 'org.jetbrains:annotations:16.0.2'
    // https://mvnrepository.com/artifact/org.slick2d/slick2d-core
    implementation group: 'org.slick2d', name: 'slick2d-core', version: '1.0.2' // needed for documentation
    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'
    // https://mvnrepository.com/artifact/jpl/jpl
    implementation group: 'jpl', name: 'jpl', version: '7.4.0'
    // https://mvnrepository.com/artifact/de.sciss/sphinx4
//    implementation group: 'de.dfki.mary', name: 'marytts-client', version: '5.1.2'
    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    implementation group: 'net.java.dev.jna', name: 'jna', version: '4.2.2'
    // https://mvnrepository.com/artifact/net.java.dev.jna/jna-platform
    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '4.2.2'
    // https://mvnrepository.com/artifact/com.1stleg/jnativehook
    implementation group: 'com.1stleg', name: 'jnativehook', version: '2.1.0'
    // https://mvnrepository.com/artifact/com.fifesoft/autocomplete
    implementation group: 'com.fifesoft', name: 'autocomplete', version: '2.0.5.1'
    // https://mvnrepository.com/artifact/math.geom2d/javaGeom
    implementation group: 'math.geom2d', name: 'javaGeom', version: '0.11.1'
    // https://mvnrepository.com/artifact/net.sourceforge.javaflacencoder/java-flac-encoder
    implementation group: 'net.sourceforge.javaflacencoder', name: 'java-flac-encoder', version: '0.3.7'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20171018'
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
    // https://mvnrepository.com/artifact/com.github.sarxos/webcam-capture
    implementation group: 'com.github.sarxos', name: 'webcam-capture', version: '0.3.12'
    // https://mvnrepository.com/artifact/com.google.zxing/core
    implementation group: 'com.google.zxing', name: 'core', version: '2.0'
    // https://mvnrepository.com/artifact/com.google.zxing/javase
    implementation group: 'com.google.zxing', name: 'javase', version: '2.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/com.nativelibs4java/bridj
    implementation group: 'com.nativelibs4java', name: 'bridj', version: '0.7.0'
}
java {
    withJavadocJar()
    withSourcesJar()
}
jar {
    duplicatesStrategy = 'exclude'
    from {
            (configurations.runtimeClasspath).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes(
                'Main-Class': 'de.dfki.vsm.SceneMaker3',
                'build' : versioning.info.build,
                'Build-Revision': versioning.info.commit,
                'Full-Version': versioning.info.full,
                'Last-Tag': versioning.info.lastTag
        )
    }
}